[fan_generic _filter_fan]
#! In FAN2 Positon (Filter)
pin: PA0
off_below: 0.1

[gcode_macro _FILTER_SETTINGS]

variable_filter_fan: "_filter_fan"
variable_min_fan_speed: 0.1 # has to be >= 'off_below' parameter of the fan
variable_max_print_hours: 50
variable_max_days: 60
variable_replacement_gcode: "PLAY_TONE_ACTION_REQUIRED"

variable_exhaust_fan: "exhaust_fan"
variable_ventilation_filter_seconds:  60
variable_ventilation_exhaust_seconds: 300

gcode:

[gcode_macro _FILTER_FLUSH_TIMER]
variable_timer_start: -1
gcode:
    {% if timer_start >= 0 %}
        {% set time = printer.idle_timeout.mcu_uptime - timer_start %}
        {% set print_hours = printer.save_variables.variables.filter_print_hours|float %}
        SAVE_VARIABLE VARIABLE=filter_print_hours VALUE={print_hours + time / 3600.0}
        SET_GCODE_VARIABLE MACRO=_FILTER_FLUSH_TIMER VARIABLE=timer_start VALUE={printer.idle_timeout.mcu_uptime}
    {% endif %}

[gcode_macro _FILTER_TIMER_START]
gcode:
    _FILTER_FLUSH_TIMER
    SET_GCODE_VARIABLE MACRO=_FILTER_FLUSH_TIMER VARIABLE=timer_start VALUE={printer.idle_timeout.mcu_uptime}

[gcode_macro _FILTER_TIMER_STOP]
gcode:
    _FILTER_FLUSH_TIMER
    SET_GCODE_VARIABLE MACRO=_FILTER_FLUSH_TIMER VARIABLE=timer_start VALUE=-1

[gcode_macro FILTER_RESET]
gcode:
    _FILTER_FLUSH_TIMER
    SAVE_VARIABLE VARIABLE=filter_print_hours VALUE=0.0
    SAVE_VARIABLE VARIABLE=filter_last_reset  VALUE={printer.idle_timeout.mcu_startup_unixtime + printer.idle_timeout.mcu_uptime}
    {action_respond_info("Filter timers have been reset.")}

[gcode_macro FILTER_QUERY]
gcode:
    _FILTER_FLUSH_TIMER

    {% set print_hours = printer.save_variables.variables.filter_print_hours|float %}
    {% set print_hours_max = printer["gcode_macro _FILTER_SETTINGS"].max_print_hours|float %}
    {% set print_hours_percent = print_hours / print_hours_max * 100 %}
    {% set remaining_print_hours = print_hours_max - print_hours %}

    {% set unixtime = printer.idle_timeout.mcu_startup_unixtime + printer.idle_timeout.mcu_uptime %}
    {% set days = (unixtime - printer.save_variables.variables.filter_last_reset) / 86400.0 %}
    {% set days_max = printer["gcode_macro _FILTER_SETTINGS"].max_days|float %}
    {% set days_percent = days / days_max * 100 %}
    {% set remaining_days = days_max - days %}

    {% set usage_percent = [print_hours_percent, days_percent]|max %}

    {% set print_hours_per_day = print_hours / [days, 0.001]|max %}
    {% set approx_remaining_days = remaining_print_hours / [print_hours_per_day, 0.001]|max %}
    {% if approx_remaining_days < remaining_days and approx_remaining_days > 0.0 %}
        {% set remaining_days_str = "%d-%d days"|format(approx_remaining_days|round|int, remaining_days|round|int) %}
    {% else %}
        {% set remaining_days_str = "%d days"|format([remaining_days, 0.0]|max|round|int) %}
    {% endif %}

    M117 Filter {"%.2f%%"|format(usage_percent)}
    {action_respond_info("Filter status: %.2f%% used (%s / %d print hours until replacement)"|format(usage_percent, remaining_days_str, [remaining_print_hours, 0.0]|max|round|int))}

    {% if usage_percent >= 100.0 %}
        {printer["gcode_macro _FILTER_SETTINGS"].replacement_gcode}
    {% endif %}

[gcode_macro FILTER_ON]
gcode:
    UPDATE_DELAYED_GCODE ID=_DELAYED_FILTER_OFF DURATION=0
    UPDATE_DELAYED_GCODE ID=_DELAYED_EXHAUST_OFF DURATION=0
    FILTER_QUERY
    _FILTER_TIMER_START

    {% set fan_speed = params.FAN_SPEED|default(1.0)|float %}
    {% set min_fan_speed = printer["gcode_macro _FILTER_SETTINGS"].min_fan_speed|float %}
    {% set actual_fan_speed = min_fan_speed + fan_speed * (1.0 - min_fan_speed) %}
    SET_FAN_SPEED FAN={printer["gcode_macro _FILTER_SETTINGS"].filter_fan} SPEED={actual_fan_speed}

[gcode_macro FILTER_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=_DELAYED_FILTER_OFF DURATION=0
    _FILTER_TIMER_STOP
    FILTER_QUERY

    SET_FAN_SPEED FAN={printer["gcode_macro _FILTER_SETTINGS"].filter_fan} SPEED=0

[gcode_macro FILTER_VENTILATE_CHAMBER]
gcode:
    SET_FAN_SPEED FAN={printer["gcode_macro _FILTER_SETTINGS"].filter_fan} SPEED=1.0
    FILTER_QUERY
    _FILTER_TIMER_START
    UPDATE_DELAYED_GCODE ID=_DELAYED_FILTER_OFF DURATION={printer["gcode_macro _FILTER_SETTINGS"].ventilation_filter_seconds}

[delayed_gcode _DELAYED_FILTER_OFF]
gcode:
    FILTER_OFF
    {% set exhaust_fan = printer["gcode_macro _FILTER_SETTINGS"].exhaust_fan %}
    {% if exhaust_fan %}
        SET_FAN_SPEED FAN={exhaust_fan} SPEED=1.0
        UPDATE_DELAYED_GCODE ID=_DELAYED_EXHAUST_OFF DURATION={printer["gcode_macro _FILTER_SETTINGS"].ventilation_exhaust_seconds}
    {% endif %}

[delayed_gcode _DELAYED_EXHAUST_OFF]
gcode:
    {% set exhaust_fan = printer["gcode_macro _FILTER_SETTINGS"].exhaust_fan %}
    {% if exhaust_fan %}
        SET_FAN_SPEED FAN={exhaust_fan} SPEED=0
    {% endif %}
    PLAY_TONE_PRINT_END
