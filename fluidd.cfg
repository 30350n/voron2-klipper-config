[virtual_sdcard]
path: /home/pi/gcode_files

[pause_resume]

[display_status]

[exclude_object]

[save_variables]
filename: ~/klipper_config/saved_variables.cfg

[gcode_macro PARK]
gcode:
    {% set Z = params.Z|default(printer.gcode_move.position.z)|float %}
    SAVE_GCODE_STATE NAME=before_park
    G90
    G0 X30 Y{printer.toolhead.axis_maximum.y} Z{Z} F12000
    RESTORE_GCODE_STATE NAME=before_park

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    PLAY_TONE_CANCEL_PRINT
    TURN_OFF_HEATERS
    NEVERMORE_OFF
    CANCEL_PRINT_BASE
    {% set z = 50.0|float %}
    {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
        G91
        G0 Z{z} F2160
        PARK
    {% else %}
        G90
        G0 Z{printer.toolhead.axis_maximum.z} F2160
    {% endif %}
    G90

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    {% set z_hop = params.Z_HOP|default(10)|int %}

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=z_hop VALUE={z_hop}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=temp_extruder VALUE={printer['extruder'].target}

        ;SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
        SAVE_GCODE_STATE NAME=before_pause
        PAUSE_BASE
        {% if (printer.gcode_move.position.z + z_hop) < printer.toolhead.axis_maximum.z %}
            G91
            G0 Z{z_hop} F2160
        {% else %}
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=z_hop VALUE=0
        {% endif %}
        PARK
        SAVE_GCODE_STATE NAME=pause_park
        M104 S0                                 ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200          ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE

variable_z_hop: 0
variable_temp_extruder: 0
variable_purge_len: 0

gcode:
    {% if printer['pause_resume'].is_paused|int == 1 %}
        ;SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
        {% if temp_extruder > 0 %}
            M109 S{temp_extruder|float}
        {% endif %}
        RESTORE_GCODE_STATE NAME=pause_park MOVE=1 MOVE_SPEED=150
        {% if purge_len > 0 %}
            PARK
            SAVE_GCODE_STATE NAME=before_purge
            CLEAN_NOZZLE PURGE_LEN={purge_len} PURGE_TEMP_MIN={temp_extruder - 10.0}
            RESTORE_GCODE_STATE NAME=before_purge MOVE=1 MOVE_SPEED=150
        {% endif %}
        RESTORE_GCODE_STATE NAME=before_pause MOVE=1 MOVE_SPEED=100
        RESUME_BASE
    {% endif %}

[gcode_macro M600]
gcode:
    {% set z_hop = params.Z_HOP|default(10)|int %}
    {% set retract_len = params.RETRACT_LEN|default(100.0)|float %}
    {% set purge_len = params.PURGE_LEN|default(125.0)|float %}

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=z_hop VALUE={z_hop}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=temp_extruder VALUE={printer['extruder'].target}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=purge_len VALUE={purge_len}

        ;SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
        SAVE_GCODE_STATE NAME=before_pause
        PAUSE_BASE
        {% if (printer.gcode_move.position.z + z_hop) < printer.toolhead.axis_maximum.z %}
            G91
            G0 Z{z_hop} F2160
        {% else %}
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=z_hop VALUE=0
        {% endif %}
        G90
        G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F12000
        M83
        G1 E-{retract_len} F12000
        SAVE_GCODE_STATE NAME=pause_park
        SET_IDLE_TIMEOUT TIMEOUT=7200
        PLAY_TONE_ACTION_REQUIRED
    {% endif %}

[gcode_macro EXTRACT_FILAMENT]

variable_retract_len:   150
variable_retract_speed: 600

gcode:
    {% set temperature = params.TEMPERATURE|default(250)|float %}
    {% if temperature > printer.configfile.settings.extruder.min_extrude_temp|float %}
        SET_GCODE_VARIABLE MACRO=INSERT_FILAMENT VARIABLE=temperature VALUE={temperature}

        SAVE_GCODE_STATE NAME=before_remove_filament

        CG28
        G90
        {% if printer.gcode_move.position.z < 10.0 %}
            G0 Z10 F2160
        {% endif %}
        PARK

        M109 S{temperature}
        PLAY_TONE_START_OPERATION
        M83
        G1 E-{retract_len} F{retract_speed}

        RESTORE_GCODE_STATE NAME=before_remove_filament
        PLAY_TONE_ACTION_REQUIRED
    {% else %}
        { action_raise_error("temperature below min_extrude_temp") }
        PLAY_TONE_ERROR
    {% endif %}

[gcode_macro INSERT_FILAMENT]

variable_insert_len: 50
variable_insert_speed: 300
variable_default_purge_len: 100

variable_temperature: -1

gcode:
    {% set purge_len = params.PURGE_LEN|default(default_purge_len)|float %}
    {% set temperature = params.TEMPERATURE|default(temperature)|float %}

    {% if temperature > printer.configfile.settings.extruder.min_extrude_temp|float %}
        SAVE_GCODE_STATE NAME=before_insert_filament

        M109 S{temperature}
        PLAY_TONE_START_OPERATION
        M83
        G1 E{insert_len} F{insert_speed}
        
        CG28
        G90
        CLEAN_NOZZLE PURGE_LEN={purge_len} PURGE_TEMP_MIN={temperature - 10.0}
        PARK Z=30

        RESTORE_GCODE_STATE NAME=before_insert_filament
        PLAY_TONE_SUCCESS
    {% else %}
        { action_raise_error("temperature below min_extrude_temp") }
        PLAY_TONE_ERROR
    {% endif %}
    SET_GCODE_VARIABLE MACRO=INSERT_FILAMENT VARIABLE=temperature VALUE=-1
